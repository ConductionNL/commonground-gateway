{{- if .Values.ingress.enabled -}}
{{- $fullName := include "commonground-gateway.fullname" . -}}
{{- $svcPort := .Values.service.sslport -}}
{{- $gatewayUi := include "commonground-gateway.fullname" . -}} 
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.Version)) }}
{{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
{{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
{{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.Version -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.Version -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
  {{- include "commonground-gateway.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.global.tls }}
    cert-manager.io/cluster-issuer: letsencrypt-prod
      {{- end }}
    {{ if eq .Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ if eq .Values.ingress.path "/" }}/$1{{ else }}/$2{{ end }}
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: 'true'
    nginx.ingress.kubernetes.io/auth-tls-secret: test/commonground-gateway-rootca
    nginx.ingress.kubernetes.io/auth-tls-verify: optional_no_ca
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: '4'
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    {{ end }}
    {{ if eq .Values.ingress.className "traefik"}}
    traefik.ingress.kubernetes.io/router.middlewares: {{ .Release.Namespace }}-{{ .Release.Name }}-middleware@kubernetescrd
  {{ end }}
  {{- with .Values.ingress.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.Version) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
    {{- if .Values.global.tls }}
  tls:
    - hosts:
          - api.{{ .Values.global.domain }}
      secretName: {{ $fullName }}-tls
      {{- end }}
  rules:
    - host: api.{{ $.Values.global.domain }}
      http:
        paths:
          - path: {{ $.Values.ingress.path }}{{ if eq .Values.ingress.className "nginx" }}{{ if not (eq .Values.ingress.path "/") }}(/|$){{ end }}(.*){{ end }}
            {{- if and .Values.ingress.pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.Version) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.Version }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.Version) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.Version }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
        {{- end }}
    {{- end }}
{{ end }}
---
{{ if and (eq .Values.ingress.className "traefik") .Values.ingress.enabled }}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-middleware
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-middleware
    app.kubernetes.io/part-of: {{ .Release.Name }}
    helm.sh/chart: {{ include "chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  stripPrefix:
    prefixes:
      - {{ .Values.ingress.path }}
  {{ end }}
