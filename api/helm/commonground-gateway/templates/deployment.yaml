apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "commonground-gateway.fullname" . }}
  labels:
    {{- include "commonground-gateway.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "commonground-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "commonground-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "commonground-gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: dependencies
          secret:
            secretName: {{ include "commonground-gateway.fullname" . }}-dependencies
            defaultMode: 420
        - name: app-certificates
          secret:
            {{ if .Values.security.certificate.existingSecret }}
            secretName: {{ .Values.security.certificate.existingSecret }}
            {{ else }}
            secretName: {{ include "commonground-gateway.fullname" . }}-certificate
            {{ end }}
            defaultMode: 420
        {{- if .Values.security.saml.enabled }}
        - name: idp-certificate
          secret:
            {{ if .Values.security.saml.idp.certificate.existingSecret }}
            secretName: {{ .Values.security.saml.idp.certificate.existingSecret }}
            {{ else }}
            secretName: {{ include "commonground-gateway.fullname" . }}-idpcertificate
            {{ end }}
            defaultMode: 420
        {{- end }}
        {{- if .Values.fixtures }}
        - name: fixtures
          configMap:
            name: {{ include "commonground-gateway.fullname" . }}-fixtures
            defaultMode: 420
        {{- end }}
        {{- if .Values.config.samesiteCookie}}
        - name: framework
          configMap:
            name: {{ include "commonground-gateway.fullname" . }}-framework
            defaultMode: 420
        {{- end }}
        {{- if eq .Values.databaseType "mssql" }}
        - name: doctrine
          configMap:
            name: {{ include "commonground-gateway.fullname" . }}-doctrineconfig
            defaultMode: 420
        {{- end }}
        - name: vendor
          persistentVolumeClaim:
              claimName: {{ include "commonground-gateway.fullname" . }}-vendor
        - name: tmpfsnginx
          emptyDir: {}
        - name: tmpfsnginx2
          emptyDir: {}
        - name: tmpfsphp
          emptyDir: {}
        {{-  if .Values.security.rootCA }}
        - name: certificates
          projected:
            sources:
            - secret:  
                name: {{ include "commonground-gateway.fullname" . }}-rootca
            - secret:
                name: {{ include "commonground-gateway.fullname" . }}-tls
        {{- end }}
      initContainers:
          - name: {{ include "commonground-gateway.fullname" . }}-init          
            securityContext:
              {{- toYaml .Values.securityContextPhp | nindent 14 }}
            image: "{{ .Values.php.repository }}:{{ .Values.php.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.php.pullPolicy }}
            volumeMounts:
              - mountPath: /tmp/vendor
                name: vendor
                readOnly: false
            command:
              - bash
              - /srv/api/docker/php/online-copy-vendor.sh
      containers:
        - name: {{ include "commonground-gateway.fullname" . }}-php
          securityContext:
            {{- toYaml .Values.securityContextPhp | nindent 12 }}
          image: "{{ .Values.php.repository }}:{{ .Values.php.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.php.pullPolicy }}
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /srv/api/config/packages/dependencies.yaml
              subPath: dependencies.yaml
              name: dependencies
              readOnly: true
            - mountPath: /srv/api/var
              name: tmpfsphp
              readOnly: false
            - mountPath: /var/run/certs
              name: app-certificates
              readOnly: true
            {{- if .Values.security.saml.enabled }}
            - mountPath: /var/run/idp
              name: idp-certificate
              readOnly: true
            {{- end }}
            {{- if .Values.fixtures }}
            - mountPath: /srv/api/fixtures
              name: fixtures
              readOnly: true
            {{- end }}
            {{- if .Values.config.samesiteCookie}}
            - mountPath: /srv/api/config/packages/prod/framework.additions.yaml
              subPath: framework.yaml
              name: framework
              readOnly: true
            {{- end }}
            {{- if eq .Values.databaseType "mssql" }}
            - mountPath: /srv/api/config/packages/prod/doctrine.yaml
              subPath: doctrine.yaml
              name: doctrine
              readOnly: true
            {{- end }}
            - mountPath: /srv/api/vendor
              subPath: vendor
              name: vendor
              readOnly: false
            - mountPath: /srv/api/composer.json
              subPath: composer.json
              name: vendor
              readOnly: false
            - mountPath: /srv/api/composer.lock
              subPath: composer.lock
              name: vendor
              readOnly: false
            - mountPath: /srv/api/symfony.lock
              subPath: symfony.lock
              name: vendor
              readOnly: false
            - mountPath: /srv/api/config/bundles.php
              subPath: bundles.php
              name: vendor
              readOnly: false
          env:
            - name: APP_ENV
              value: {{ .Values.config.env }}
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel }}
            - name: APP_AUTH
              valueFrom:
                configMapKeyRef:
                  key: auth-enabled
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: APP_INIT
              value: 'true'
            - name: AUTH_ENABLED
              value: 'true'
            - name: APP_REPRO
              value: 'https://github.com/ConductionNL/commonground-gateway'
            - name: TRUSTED_HOSTS
              valueFrom:
                configMapKeyRef:
                  key: trusted-hosts
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: TRUSTED_PROXIES
              valueFrom:
                configMapKeyRef:
                  key: trusted-proxies
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: CORS_ALLOW_ORIGIN
              valueFrom:
                configMapKeyRef:
                  key: app-cors-allow-origin
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: APP_VERSION
              valueFrom:
                configMapKeyRef:
                  key: app-version
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: APP_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: APP_CACHE
              valueFrom:
                configMapKeyRef:
                  key: cache
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: database-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: CACHE_URL
              valueFrom:
                secretKeyRef:
                  key: mongodb-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: GLOBAL_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: global-domain
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: APP_URL
              valueFrom:
                configMapKeyRef:
                  key: url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: APP_SESSION_DURATION
              valueFrom:
                configMapKeyRef:
                  key: session-duration
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: READ_ONLY
              value: {{ .Values.config.readOnly | quote }}
            - name: CRON_RUNNER_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: cron-runner-enabled
                  name: {{ include "commonground-gateway.fullname" . }}
            {{- if .Values.config.cronRunner.enabled }}
            - name: CRON_RUNNER_CRONTAB
              valueFrom:
                configMapKeyRef:
                  key: cron-runner-crontab
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: CRON_RUNNER_CONCURRENCY_POLICY
              valueFrom:
                configMapKeyRef:
                  key: cron-runner-concurrencyPolicy
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: CRON_RUNNER_ACTIVE_DEADLINE_SECONDS
              valueFrom:
                configMapKeyRef:
                  key: cron-runner-activeDeadlineSeconds
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: CRON_RUNNER_APP_AUTH
              valueFrom:
                configMapKeyRef:
                  key: cron-runner-appAuth
                  name: {{ include "commonground-gateway.fullname" . }}
            {{- end}}
            - name: APP_DEFAULT_REDIRECT_URL
              {{- if contains "useDomain" .Values.config.defaultRedirectUrl }}
              value: {{ printf "https://%s/login/oidc/dex" .Values.global.domain | quote }}
              {{ else }}
              value: {{ .Values.config.defaultRedirectUrl }}
              {{- end}}
            - name: APP_DEFAULT_BACK_URL
              {{- if contains "useDomain" .Values.config.defaultBackUrl }}
              value: {{ printf "https://%s" .Values.global.domain | quote }}
              {{ else }}
              value: {{ .Values.config.defaultBackUrl }}
              {{- end}}
          #RabbitMQ
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "commonground-gateway.fullname" . }}
                  key: rabbitmq-host
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "commonground-gateway.fullname" . }}
                  key: rabbitmq-port
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "commonground-gateway.fullname" . }}
                  key: rabbitmq-username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "commonground-gateway.fullname" . }}
                  key: rabbitmq-password
            {{- if or (and .Values.security.certificate.certificate .Values.security.certificate.privateKey) .Values.security.certificate.existingSecret }}
            - name: APP_CERT
              value: '/var/run/certs/tls.crt'
            - name: APP_KEY
              value: '/var/run/certs/tls.key'
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: redis-host
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: redis-port
                  name: {{ include "commonground-gateway.fullname" . }}
            {{- end }}
            - name: SAML_ENABLED
              valueFrom:
                secretKeyRef:
                  key: saml-enabled
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DIGID_ENABLED
              valueFrom:
                secretKeyRef:
                  key: digid-enabled
                  name: {{ include "commonground-gateway.fullname" . }}
            {{- if .Values.security.saml.enabled }}
            - name: SAML_METADATA_LOCATION
              valueFrom:
                secretKeyRef:
                  key: saml-metadata-location
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: SAML_SIGN_ON_URL
              valueFrom:
                secretKeyRef:
                  key: saml-single-sign-on-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: SAML_LOGOUT_URL
              valueFrom:
                secretKeyRef:
                  key: saml-logout-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: SAML_IDP_CERT
              value: '/var/run/idp/idp.crt'
            {{- end }}
            - name: GITHUB_KEY
              valueFrom:
                secretKeyRef:
                  key: githubKey
                  name: {{ include "commonground-gateway.fullname" . }}
            {{- if .Values.security.digid.enabled }}
            - name: DIGID_METADATA_LOCATION
              valueFrom:
                secretKeyRef:
                  key: digid-metadata-location
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DIGID_ARTIFACT_URL
              valueFrom:
                secretKeyRef:
                  key: digid-artifact-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DIGID_SIGN_ON_URL
              valueFrom:
                secretKeyRef:
                  key: digid-single-sign-on-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DIGID_LOGOUT_URL
              valueFrom:
                secretKeyRef:
                  key: digid-logout-url
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DIGID_IDP_CERT
              value: '/var/run/idp/digid_idp.crt'
            {{-  if and .Values.security.digid.certificate .Values.security.digid.privateKey }}
            - name: DIGID_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  key: digid-certificate
                  name: {{ include "commonground-gateway.fullname" . }}
            - name: DIGID_PRIVATEKEY
              valueFrom:
                secretKeyRef:
                  key: digid-privatekey
                  name: {{ include "commonground-gateway.fullname" . }}
            {{- end }}
            {{- end }}
            {{- if .Values.config.httpsProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.config.httpsProxy }}
            {{- end }}

          resources:
            {{- toYaml .Values.php.resources | nindent 12 }}
        - name: {{ include "commonground-gateway.fullname" . }}-nginx
          securityContext:
          {{- toYaml .Values.securityContextNginx | nindent 12 }}
          image: "{{ .Values.nginx.repository }}:{{ .Values.nginx.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nginx.pullPolicy }}
          volumeMounts:
              - mountPath: /var/cache/nginx
                name: tmpfsnginx
              - mountPath: /var/run
                name: tmpfsnginx2
          env:
            - name: PHP_SERVICE
              value: localhost
            - name: NGINX_HOST
              value: localhost
            - name: BACKENDS
              value: localhost
            - name: NGINX_ENV
              value: {{ .Values.config.env }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
