# ContactCatalogus Entities, Attributes, Endpoints, Handlers & (fixtures:) ObjectEntities + Values
# todo: Collection could and maybe should replace everything but Fixtures (check other todo's and defaultValues first)

# Collections
#App\Entity\CollectionEntity:
#    contactCatalogusCollection:
#        name: ContactCatalogus collection
#        sourceType: github
#        locationOAS: https://raw.githubusercontent.com/ConductionNL/contactcatalogus/master/api/public/schema/openapi.yaml

# Entities
App\Entity\Entity:
    # Organization Entity
    organization:
        function: "organization"
        route: "/organizations"
        name: organization
        description: Entity Organisation exists of an id, a name, a description, a kvk number, one or more telephones, one or more addresses, one or more emails and one or more persons.
        endpoint: "organizations"
        inherited: true

    # Person Entity
    person:
        function: "person"
        route: "/people"
        name: person
        description: Entity Person exists of an id, a givenName, a additionalName, a familyName, one or more telephones, one or more addresses, one or more emails and one or more organisations.
        endpoint: "people"

    #Email Entity
    email:
        route: "/emails"
        name: email
        description: Entity Email exists of an id, a name, an email, one or more people and one or more organisations.
        endpoint: "emails"

    #Telefoon Entity
    telephone:
        route: "/telephones"
        name: telephone
        description: Entity Telephone exists of an id, a name and a telephone, one or more people and one or more organisations.
        endpoint: "telephones"

    #Address Entity
    address:
        route: "/addresses"
        name: address
        description: Entity Address exists of an id, a name, a bagnummeraanduiding, a street, a houseNumber, a houseNumberSufix, a postalCode, a region, a locality and country, one or more people and one or more organisations.
        endpoint: "addresses"


# Attributes
App\Entity\Attribute:
    # Organization Attributes
    organization_name:
        name: name
        description: The name of this organization.
        type: string
        required: true
        maxLength: 255
        mustBeUnique: true
        entity: "@organization"
        searchable: true
    organization_description:
        name: description
        description: The description of this organization.
        type: string
        maxLength: 255
        entity: "@organization"
    organization_coc:
        name: coc
        description: The Chamber Of Comerce number of this organization.
        type: string
        maxLength: 15
        entity: "@organization"
    organization_vatID:
        name: vatID
        description: Value added tax id of this organisation (btw)
        type: string
        maxLength: 15
        entity: "@organization"
    organization_type:
        name: type
        description: To be able to differentiat between organizations we need to know what kind of organization they are. The type attribute descirbes what kind of organization this is.
        type: string
        required: true
#        enum: ["taalhuis", "bisc", "verwijzer", "aanbieder", "team"] #todo BISC only?
        entity: "@organization"
        searchable: true
        immutable: true #todo BISC only?
    organization_parentOrganization:
        name: parentOrganization
        description: The larger organization that this organization is a subOrganization of.
        type: object
        entity: "@organization"
        object: "@organization"
        cascade: true
        searchable: true
        immutable: true # todo BISC only?
        inversedBy: "@organization_subOrganizations"
        defaultValue: "a1c8e0b6-2f78-480d-a9fb-9792142f4761"
    organization_subOrganizations:
        name: subOrganizations
        description: The sub-organizations of which this organization is the parent organization.
        type: object
        multiple: true
        entity: "@organization"
        object: "@organization"
        cascade: true
        inversedBy: "@organization_parentOrganization"
    organization_addresses:
        name: addresses
        description: Where is the organization located?
        type: object
        multiple: true
        entity: "@organization"
        object: "@address"
        cascade: true
        cascadeDelete: true
    organization_telephones:
        name: telephones
        description: The telephone number of this organization.
        type: object
        multiple: true
        entity: "@organization"
        object: "@telephone"
        cascade: true
        cascadeDelete: true
    organization_emails:
        name: emails
        description: The email address of this organization.
        type: object
        multiple: true
#        mustBeUnique: true #todo BISC only?
        entity: "@organization"
        object: "@email"
        cascade: true
        cascadeDelete: true
    organization_people:
        name: people
        description: The people of this organization.
        type: object
        multiple: true
        entity: "@organization"
        object: "@person"
        cascade: true
        inversedBy: "@person_organization"

    # Person Attributes
    person_name:
        name: name
        description: The full name of a person consisting of given and fammily name
        type: string
#        readOnly: true # todo ???
        entity: "@person"
    person_formalName:
        name: formalName
        description: The full name of a person consisting of fammily and given name
        type: string
#        readOnly: true # todo ???
        entity: "@person"
    person_givenName:
        name: givenName
        description: Given name of this person
        type: string
        maxLength: 255
        required: true;
        entity: "@person"
    person_additionalName:
        name: additionalName
        description: Additional name of this person
        type: string
        maxLength: 255
        entity: "@person"
    person_familyName:
        name: familyName
        description: Family name of this person
        type: string
        maxLength: 255
        entity: "@person"
        required: true
    person_birthday:
        name: birthday
        description: Date of birth of this person
        type: date
        entity: "@person"
    person_taxID:
        name: taxID
        description: TIN, CIF, NIF or BSN
        type: string
        maxLength: 255
        entity: "@person"
    person_aboutMe:
        name: aboutMe
        description: Information about this person
        type: string
        maxLength: 255
        entity: "@person"
    person_birthplace:
        name: birthplace
        description: Birthplace of this person (an Address)
        type: object
        entity: "@person"
        object: "@address"
        cascade: true
        cascadeDelete: true
    person_gender:
        name: gender
        description: The gender of this person. **Male**, **Female**, **X**
        type: string
        enum: ["Male", "Female", "X"]
        entity: "@person"
    person_maritalStatus:
        name: maritalStatus
        description: The marital status of this person. **MARRIED_PARTNER**, **SINGLE**, **DIVORCED**, **WIDOW**
        type: string
        enum: ["MARRIED_PARTNER", "SINGLE", "DIVORCED", "WIDOW"]
        entity: "@person"
    person_primaryLanguage:
        name: primaryLanguage
        description: The primary language of this person.
        type: string
        maxLength: 255
        entity: "@person"
    person_speakingLanguages:
        name: speakingLanguages
        description: The speaking languages of this person.
        type: string
        maxLength: 255
        entity: "@person"
    person_contactPreference:
        name: contactPreference
        description: The contact preference of this person.
        type: string
        entity: "@person"
    person_personalPhoto:
        name: personalPhoto
        description: A photo of this person (base64 file)
        type: file
        fileTypes: 
            [
                "image/png",
                "image/x-png",
                "image/jpeg",
                "image/pjpeg",
                "image/svg+xml"
            ]
        entity: "@person"
    person_emails:
        name: emails
        description: emails of this person
        type: object
        multiple: true
        entity: "@person"
        object: "@email"
        cascade: true
        cascadeDelete: true
    person_telephones:
        name: telephones
        description: telephones of this person
        type: object
        multiple: true
        entity: "@person"
        object: "@telephone"
        cascade: true
        cascadeDelete: true
    person_addresses:
        name: addresses
        description: addresses of this person
        type: object
        multiple: true
        entity: "@person"
        object: "@address"
        cascade: true
        cascadeDelete: true
    person_organization:
        name: addresses
        description: organization of this person
        type: object
        entity: "@person"
        object: "@organization"
        inversedBy: "@organization_people"

    # Email Attributes
    email_name:
        name: name
        type: string
        maxLength: 255
        entity: "@email"
    email_email:
        name: email
        type: string
        maxLength: 255
        required: true
        format: email
        entity: "@email"

    #Telephone Attributes
    telephone_name:
        name: name
        type: string
        maxLength: 255
        entity: "@telephone"
    telephone_telephone:
        name: telephone
        type: string
        maxLength: 255
        required: true
        format: phone
        entity: "@telephone"

    # Address Attributes
    address_name:
        name: name
        type: string
        maxLength: 255
        entity: "@address"
    address_street:
        name: street
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_houseNumber:
        name: houseNumber
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_houseNumberSuffix:
        name: houseNumberSuffix
        type: string
        maxLength: 255
        entity: "@address"
    address_postalCode:
        name: postalCode
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_locality:
        name: locality
        type: string
        maxLength: 255
        required: true
        entity: "@address"
    address_country:
        name: country
        type: string
        format: countryCode
        maxLength: 255
        entity: "@address"

# Parameters for endpoint regex
parameters:
    organizationItemRegex: "^organizations/[a-z0-9-]{36}$"
    personItemRegex: "^people/[a-z0-9-]{36}$"
    emailItemRegex: "^emails/[a-z0-9-]{36}$"
    telephoneItemRegex: "^telephones/[a-z0-9-]{36}$"
    addressItemRegex: "^addresses/[a-z0-9-]{36}$"

# Endpoints        
App\Entity\Endpoint:
    # Organization Endpoints
    organizationEndpointGet:
        name: Organization endpoint get collection
        description: endpoint for organizations
        path: [ 'organizations' ]
        pathRegex: "^(organizations)$"
        method: GET
        operationType: collection

    organizationEndpointPost:
        name: Organization endpoint post
        description: endpoint for organizations
        path: [ 'organizations' ]
        pathRegex: "^(organizations)$"
        method: POST
        operationType: collection

    organizationEndpointGetItem:
        name: Organization endpoint get item
        description: endpoint for organizations
        path: [ 'organizations', '{id}' ]
        pathRegex: <{organizationItemRegex}>
        method: GET
        operationType: item

    organizationEndpointPut:
        name: Organization endpoint put
        description: endpoint for organizations
        path: [ 'organizations', '{id}' ]
        pathRegex: <{organizationItemRegex}>
        method: PUT
        operationType: item

    organizationEndpointDelete:
        name: Organization endpoint delete
        description: endpoint for organizations
        path: [ 'organizations', '{id}' ]
        pathRegex: <{organizationItemRegex}>
        method: DELETE
        operationType: item

    # Person Endpoints
    personEndpointGet:
        name: Person endpoint get collection
        description: endpoint for people
        path: [ 'people' ]
        pathRegex: "^(people)$"
        method: GET
        operationType: collection

    personEndpointPost:
        name: Person endpoint post
        description: endpoint for people
        path: [ 'people' ]
        pathRegex: "^(people)$"
        method: POST
        operationType: collection

    personEndpointGetItem:
        name: Person endpoint get item
        description: endpoint for people
        path: [ 'people', '{id}' ]
        pathRegex: <{personItemRegex}>
        method: GET
        operationType: item

    personEndpointPut:
        name: Person endpoint put
        description: endpoint for people
        path: [ 'people', '{id}' ]
        pathRegex: <{personItemRegex}>
        method: PUT
        operationType: item

    personEndpointDelete:
        name: Person endpoint delete
        description: endpoint for people
        path: [ 'people', '{id}' ]
        pathRegex: <{personItemRegex}>
        method: DELETE
        operationType: item

    # Email Endpoints
    emailEndpointGet:
        name: Email endpoint get collection
        description: endpoint for emails
        path: [ 'emails' ]
        pathRegex: "^(emails)$"
        method: GET
        operationType: collection

    emailEndpointPost:
        name: Email endpoint post
        description: endpoint for emails
        path: [ 'emails' ]
        pathRegex: "^(emails)$"
        method: POST
        operationType: collection

    emailEndpointGetItem:
        name: Email endpoint get item
        description: endpoint for emails
        path: [ 'emails', '{id}' ]
        pathRegex: <{emailItemRegex}>
        method: GET
        operationType: item

    emailEndpointPut:
        name: Email endpoint put
        description: endpoint for emails
        path: [ 'emails', '{id}' ]
        pathRegex: <{emailItemRegex}>
        method: PUT
        operationType: item

    emailEndpointDelete:
        name: Email endpoint delete
        description: endpoint for emails
        path: [ 'emails', '{id}' ]
        pathRegex: <{emailItemRegex}>
        method: DELETE
        operationType: item

    # Telephone Endpoints
    telephoneEndpointGet:
        name: Telephone endpoint get collection
        description: endpoint for telephones
        path: [ 'telephones' ]
        pathRegex: "^(telephones)$"
        method: GET
        operationType: collection

    telephoneEndpointPost:
        name: Telephone endpoint post
        description: endpoint for telephones
        path: [ 'telephones' ]
        pathRegex: "^(telephones)$"
        method: POST
        operationType: collection

    telephoneEndpointGetItem:
        name: Telephone endpoint get item
        description: endpoint for telephones
        path: [ 'telephones', '{id}' ]
        pathRegex: <{telephoneItemRegex}>
        method: GET
        operationType: item

    telephoneEndpointPut:
        name: Telephone endpoint put
        description: endpoint for telephones
        path: [ 'telephones', '{id}' ]
        pathRegex: <{telephoneItemRegex}>
        method: PUT
        operationType: item

    telephoneEndpointDelete:
        name: Telephone endpoint delete
        description: endpoint for telephones
        path: [ 'telephones', '{id}' ]
        pathRegex: <{telephoneItemRegex}>
        method: DELETE
        operationType: item

    # Address Endpoints
    addressEndpointGet:
        name: Address endpoint get collection
        description: endpoint for addresses
        path: [ 'addresses' ]
        pathRegex: "^(addresses)$"
        method: GET
        operationType: collection

    addressEndpointPost:
        name: Address endpoint post
        description: endpoint for addresses
        path: [ 'addresses' ]
        pathRegex: "^(addresses)$"
        method: POST
        operationType: collection

    addressEndpointGetItem:
        name: Address endpoint get item
        description: endpoint for addresses
        path: [ 'addresses', '{id}' ]
        pathRegex: <{addressItemRegex}>
        method: GET
        operationType: item

    addressEndpointPut:
        name: Address endpoint put
        description: endpoint for addresses
        path: [ 'addresses', '{id}' ]
        pathRegex: <{addressItemRegex}>
        method: PUT
        operationType: item

    addressEndpointDelete:
        name: Address endpoint delete
        description: endpoint for addresses
        path: [ 'addresses', '{id}' ]
        pathRegex: <{addressItemRegex}>
        method: DELETE
        operationType: item


# Handlers
App\Entity\Handler:
    # Organization Handler
    organizationHandler:
        name: Organization handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@organizationEndpointGet", "@organizationEndpointPost", "@organizationEndpointGetItem", "@organizationEndpointPut", "@organizationEndpointDelete"]
        entity: "@organization"

    # Person Handler
    personHandler:
        name: Person handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@personEndpointGet", "@personEndpointPost", "@personEndpointGetItem", "@personEndpointPut", "@personEndpointDelete"]
        entity: "@person"

    # Email Handler
    emailHandler:
        name: Email handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@emailEndpointGet", "@emailEndpointPost", "@emailEndpointGetItem", "@emailEndpointPut", "@emailEndpointDelete"]
        entity: "@email"

    # Telephone Handler
    telephoneHandler:
        name: Telephone handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@telephoneEndpointGet", "@telephoneEndpointPost", "@telephoneEndpointGetItem", "@telephoneEndpointPut", "@telephoneEndpointDelete"]
        entity: "@telephone"

    # Address Handler
    addressHandler:
        name: Address handler
        methods: ["*"]
        sequence: 0
        conditions: "{}"
        endpoints: ["@addressEndpointGet", "@addressEndpointPost", "@addressEndpointGetItem", "@addressEndpointPut", "@addressEndpointDelete"]
        entity: "@address"


# ------ Fixtures ------

# ObjectEntities
App\Entity\ObjectEntity:
    # Default organization
    defaultOrganization:
        id: a1c8e0b6-2f78-480d-a9fb-9792142f4761
#        uri: "http://localhost/api/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
        entity: "@organization"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default organization email
    defaultOrganization_email:
        entity: "@email"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default organization telephone
    defaultOrganization_telephone:
        entity: "@telephone"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default organization address
    defaultOrganization_address:
        entity: "@address"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default person
    defaultPerson:
        id: d2a24edf-6ced-40a2-8e7c-56803f4ce3f5
#        uri: "http://localhost/api/people/d2a24edf-6ced-40a2-8e7c-56803f4ce3f5"
        entity: "@person"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default person email
    defaultPerson_email:
        entity: "@email"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default person telephone
    defaultPerson_telephone:
        entity: "@telephone"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

    # Default person address
    defaultPerson_address:
        entity: "@address"
        organization: "http://api/admin/organizations/a1c8e0b6-2f78-480d-a9fb-9792142f4761"
#        application: "uuid"
        owner: "2ac800cc-b844-458d-87e1-b206fa80113a"

# Values
App\Entity\Value:
    # Default organization Values
    defaultOrganization_name:
        attribute: "@organization_name"
        stringValue: default organization
        objectEntity: "@defaultOrganization"

    defaultOrganization_description:
        attribute: "@organization_description"
        stringValue: the default organization
        objectEntity: "@defaultOrganization"

    defaultOrganization_emails:
        attribute: "@organization_emails"
        objects: ["@defaultOrganization_email"]
        objectEntity: "@defaultOrganization"

    defaultOrganization_telephones:
        attribute: "@organization_telephones"
        objects: ["@defaultOrganization_telephone"]
        objectEntity: "@defaultOrganization"

    defaultOrganization_addresses:
        attribute: "@organization_addresses"
        objects: ["@defaultOrganization_address"]
        objectEntity: "@defaultOrganization"

    # Default organization email Values
    defaultOrganization_email_name:
        attribute: "@email_name"
        stringValue: email for default organization
        objectEntity: "@defaultOrganization_email"

    defaultOrganization_email_email:
        attribute: "@email_email"
        stringValue: default-organization@test.com
        objectEntity: "@defaultOrganization_email"

    # Default organization telephone Values
    defaultOrganization_telephone_name:
        attribute: "@telephone_name"
        stringValue: telephone for default organization
        objectEntity: "@defaultOrganization_telephone"

    defaultOrganization_telephone_telephone:
        attribute: "@telephone_telephone"
        stringValue: 0612345678
        objectEntity: "@defaultOrganization_telephone"

    # Default organization address Values
    defaultOrganization_address_name:
        attribute: "@address_name"
        stringValue: address for default organization
        objectEntity: "@defaultOrganization_address"

    defaultOrganization_address_street:
        attribute: "@address_street"
        stringValue: somestreet
        objectEntity: "@defaultOrganization_address"

    defaultOrganization_address_houseNumber:
        attribute: "@address_houseNumber"
        stringValue: 42
        objectEntity: "@defaultOrganization_address"

    defaultOrganization_address_postalCode:
        attribute: "@address_postalCode"
        stringValue: 6996
        objectEntity: "@defaultOrganization_address"

    defaultOrganization_address_locality:
        attribute: "@address_locality"
        stringValue: Utrecht
        objectEntity: "@defaultOrganization_address"

    # Default person Values
    defaultPerson_givenName:
        attribute: "@person_givenName"
        stringValue: John
        objectEntity: "@defaultPerson"

    defaultPerson_additionalName:
        attribute: "@person_additionalName"
        stringValue: Allen
        objectEntity: "@defaultPerson"

    defaultPerson_familyName:
        attribute: "@person_familyName"
        stringValue: Doe
        objectEntity: "@defaultPerson"

    defaultPerson_emails:
        attribute: "@person_emails"
        objects: ["@defaultPerson_email"]
        objectEntity: "@defaultPerson"

    defaultPerson_telephones:
        attribute: "@person_telephones"
        objects: ["@defaultPerson_telephone"]
        objectEntity: "@defaultPerson"

    defaultPerson_addresses:
        attribute: "@person_addresses"
        objects: ["@defaultPerson_address"]
        objectEntity: "@defaultPerson"

    # Default person email Values
    defaultPerson_email_name:
        attribute: "@email_name"
        stringValue: email for default person
        objectEntity: "@defaultPerson_email"

    defaultPerson_email_email:
        attribute: "@email_email"
        stringValue: default-person@test.com
        objectEntity: "@defaultPerson_email"

    # Default person telephone Values
    defaultPerson_telephone_name:
        attribute: "@telephone_name"
        stringValue: telephone for default person
        objectEntity: "@defaultPerson_telephone"

    defaultPerson_telephone_telephone:
        attribute: "@telephone_telephone"
        stringValue: 0687654321
        objectEntity: "@defaultPerson_telephone"

    # Default person address Values
    defaultPerson_address_name:
        attribute: "@address_name"
        stringValue: address for default person
        objectEntity: "@defaultPerson_address"

    defaultPerson_address_street:
        attribute: "@address_street"
        stringValue: someotherstreet
        objectEntity: "@defaultPerson_address"

    defaultPerson_address_houseNumber:
        attribute: "@address_houseNumber"
        stringValue: 666
        objectEntity: "@defaultPerson_address"

    defaultPerson_address_postalCode:
        attribute: "@address_postalCode"
        stringValue: 1234
        objectEntity: "@defaultPerson_address"

    defaultPerson_address_locality:
        attribute: "@address_locality"
        stringValue: Amsterdam
        objectEntity: "@defaultPerson_address"

App\Entity\Authentication:
    dex:
        id: bdbdb679-2b4b-461f-827d-eb812864b2b1
        name: dex
        authenticateUrl: http://localhost:5556/dex/auth
        tokenUrl: http://dex:5556/dex/token
        secret: ZXhhbXBsZS1hcHAtc2VjcmV0
        clientId: common-gateway
        scopes:
            - openid
            - email
            - groups
            - profile

App\Entity\Cronjob:
    sync:
        name: synchronisations
        description: a cronjob that sets off the synchronisations for the various sources
        crontab: '*/1 * * * *'
        throws: 
            - 'commongateway.cronjob.trigger'
        data: []
